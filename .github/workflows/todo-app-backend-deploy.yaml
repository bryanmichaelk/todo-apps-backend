name: Test Node.js CI/CD 

on:
  push:
    branches: [pipeline-backend]
  pull_request:
    branches: [pipeline-backend]
  workflow_dispatch:

jobs:
  lint:
    name: 🔍 Linting (ESLint)
    runs-on: ubuntu-latest
    steps:
      - name: ⬇ Checkout repository
        uses: actions/checkout@v4

      - name: ⚙️ Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: 📥 Install dependencies
        run: npm install --frozen-lockfile

      - name: 🔬 Run ESLint
        run: npm run lint

  typecheck:
    name: ʦ Type Checking (TypeScript)
    runs-on: ubuntu-latest
    steps:
      - name: ⬇ Checkout repository
        uses: actions/checkout@v4

      - name: ⚙️ Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: 📥 Install dependencies
        run: npm install --frozen-lockfile

      - name: 🔎 Run TypeScript Type Check
        run: npm run typecheck

  prettier:
    name: 💅 Code Formatting (Prettier)
    runs-on: ubuntu-latest
    steps:
      - name: ⬇ Checkout repository
        uses: actions/checkout@v4

      - name: ⚙️ Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: 📥 Install dependencies
        run: npm install --frozen-lockfile

      - name: 💅 Run Prettier Check
        run: npm run format

  sonarscan:
    name: 📊 SonarCloud Scan
    runs-on: ubuntu-latest
    steps:
      - name: ⬇ Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: ⚙️ Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: 📥 Install dependencies
        run: npm install --frozen-lockfile

      - name: 📊 Run SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=todo-apps-backend
            -Dsonar.organization=bryanmichaelk
  test:
    name: 🧪 Testing Backend
    runs-on: ubuntu-latest
    needs: [lint, typecheck, prettier, sonarscan] # Test dijalankan jika semua job sebelumnya berhasil
    steps:
      - name: ⬇ Checkout repository
        uses: actions/checkout@v4

      - name: ⚙️ Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: 📥 Install dependencies
        run: npm install --frozen-lockfile

      - name: 🧪 Run Tests
        run: npm test